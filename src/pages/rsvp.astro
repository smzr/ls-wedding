---
import { app } from "../firebase/server";
import { getFirestore } from "firebase-admin/firestore";
import Layout from "../layouts/Layout.astro";
export const prerender = false;

interface Attendee {
    id: string;
    name: string;
    attending: boolean;
    partyId: string;
    plusOneName: string;
    dietaryRequirements: string;
}

const db = getFirestore(app);
const attendeesRef = db.collection("attendees");
const attendeesSnapshot = await attendeesRef.get();
const attendees = attendeesSnapshot.docs.map((doc) => ({
    id: doc.id,
    ...doc.data(),
})) as Attendee[];

// Sort attendees by attending and then by name
attendees.sort((a, b) => {
    if (!a.attending && b.attending) return -1;
    if (a.attending && !b.attending) return 1;

    if (a.name < b.name) return -1;
    if (a.name > b.name) return 1;

    return 0;
});
---
<Layout title="RSVP - Luke & Sam" description="">
    <main id="main-content">
        <section class="hero">
            <div class="content flow"><h1>R.S.V.P</h1></div>
        </section>
        <section class="attendees">
            <ul>
            {
                attendees.map((attendee) => (
                <li class={attendee.attending ? 'accepted' : null}>
                    <a href={`/rsvp/${attendee.id}`}>
                        <p>{attendee.name}</p>
                        {attendee.attending && <span>Accepted</span>}
                    </a>
                </li>
                ))
            }
            </ul>
        </section>
    </main>
</Layout>
<style lang="scss">
    .hero {
        position: relative;
        text-align: center;
        padding: 100px 1.5rem;
        font-size: var(--s-xxl);
        font-weight: 350;
        font-style: oblique;
        text-transform: uppercase;
        background-color: #012F2C;
        color: #fff;

        h1 {
            color: #417E74;
        }

        &::before {
            content: "";
            position: absolute;
            top: 0;
            left: 50%;
            width: 1px;
            height: 5rem;
            background-color: #E2C08A;
        }
    }

    section.attendees {
        background-color: #012F2C;
        height: 100%;

        > ul {
            list-style: none;
            padding: 0;
            margin: 0 auto;
            max-width: 600px;
            
            > li {
                a {
                    background-color: rgba(0, 0, 0, .3);
                    display: flex;
                    justify-content: space-between;
                    padding: 20px 50px;
                    color: #fff;
                    text-decoration: none;

                    &:hover:not(.accepted) {
                        background-color: #417E74;
                    }
                }

                &.accepted a {
                    background-color: rgba(0, 0, 0, .15);

                    p {
                        opacity: 50%;
                    }

                    > span {
                        color: #E2C08A;
                    }
                }

                + li {
                    margin-top: 30px;
                }
            }
        }
    }
</style>