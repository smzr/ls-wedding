---
import { storyblokEditable, RichTextSchema, renderRichText } from "@storyblok/astro";
const { blok } = Astro.props;

const layout = blok.layout;

const content = renderRichText(blok.content, {
  resolver: (component, blok) => {
    switch (component) {
        case "eyebrow":
            return `<span class="eyebrow">${blok.content}</span>`;
        case "button":
            return `<a href="${blok.link.cached_url}" class="button">${blok.text}</a>`;
        default:
            return `Component ${component} not found`;
    }
  },
});
---
<section {...storyblokEditable(blok)} class={`${layout}`}>
    <div class="content flow"><Fragment set:html={content}/></div>
    <div class="image"><img src={`${blok.image.filename}`}></div>
</section>
<style lang="scss" is:global>
    .content-image {
        display: grid;

        .content {
            padding: 50px 1.5rem;
            h1,
            h2 {
                + * {
                    --flow-space: clamp( 1.375rem, 1.2rem + .89vw, 2rem );
                }
            }

            .button {
                --flow-space: clamp(1.5rem, 0.4231rem + 3.0769vw, 2.5rem);
            }
        }

        .image {
            position: relative;
            width: 100%;
            height: 100%;
            aspect-ratio: 1;

            img {
                position: absolute;
                width: 100%;
                height: 100%;
                object-fit: cover;
            }
        }

        @media (min-width: 768px) {
            grid-template-columns: 1fr 1fr;

            .content {
                padding: 100px;
            }

            .image {
                aspect-ratio: auto;
            }
        }
    }

    .content-image > * {
    }

    .image-content {
        @extend .content-image;
        @media (min-width: 768px) {
            .image {
                order: -1;
            }
        }
    }
</style>